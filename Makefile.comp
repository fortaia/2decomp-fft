#
# mods to accomodate the code
#
CODE_DIR=../..
include $(CODE_DIR)/build.conf

DEFS = -DENABLE_INPLACE=ON -DEVEN=ON 
ifneq ($(strip $(SINGLE_PRECISION)),1)
DEFS += -DDOUBLE_PRECISION=ON
endif
ifeq ($(strip $(FCFLAGS_DEBUG)),1)
BUILD=DEBUG
endif
ifeq ($(strip $(FCFLAGS_DEBUG_MAX)),1)
BUILD=DEBUG
endif
CMP=$(strip $(FCOMP))
#=======================================================================
# Makefile for 2DECOMP&FFT compilers
#=======================================================================
DEBUG_BUILD =
ifeq ($(BUILD),DEBUG)
  DEBUG_BUILD = yes
endif
ifeq ($(BUILD),dev)
  DEBUG_BUILD = yes
endif
FC = mpifort
ifeq ($(CMP),INTEL)
  FC = mpiifort

  FCFLAGS += -fpp -std08
  ifeq ($(DEBUG_BUILD),yes)
    DEFS += -DDEBUG
    FCFLAGS += -g -O0 -debug extended -traceback
  else
    FCFLAGS += -O3 -mavx2 -march=core-avx2 -mtune=core-avx2
  endif

  ifeq ($(BUILD),dev)
    # Add additional, stricter flags
    FCFLAGS += -warn all,noexternal
  endif

  MODFLAG = -module # Explicit space
else ifeq ($(CMP),INTEL_IFX)
  FC = mpiifx
  FCFLAGS += -fpp -std08
  ifeq ($(DEBUG_BUILD),yes)
    DEFS += -DDEBUG
    FCFLAGS += -g -O0 -debug extended -traceback
  else
    FCFLAGS += -O3 -mavx2 -march=core-avx2 -mtune=core-avx2
  endif

  ifeq ($(BUILD),dev)
    # Add additional, stricter flags
    FCFLAGS += -warn all,noexternal
  endif

  MODFLAG = -module # Explicit space
else ifeq ($(CMP),GNU)
  FC = mpifort
  FCFLAGS += -cpp -std=f2008
  ifeq "$(shell expr `gfortran -dumpversion | cut -f1 -d.` \>= 10)" "1"
    FCFLAGS += -fallow-argument-mismatch
  endif
  ifeq ($(DEBUG_BUILD),yes)
    DEFS += -DDEBUG
    FCFLAGS += -g3 -Og
    FCFLAGS += -ffpe-trap=invalid,zero -fcheck=all -fimplicit-none
  else
    FCFLAGS += -O3 -march=native
  endif
  ifeq ($(findstring openmpi,$(shell $(FC) -show | grep openmpi)),openmpi)
    MPI_FAMILY = openmpi
  else
    MPI_FAMILY = mpich # Probably
  endif

  ifeq ($(BUILD),dev)
    # Add additional, stricter flags
    FCFLAGS += -Wall -Wpedantic
    ifneq ($(FFT),fftw3)
      # FFTW3 (legacy) doesn't have interfaces
      ifeq ($(MPI_FAMILY),openmpi)
        # MPICH doesn't export interfaces...
        FCFLAGS += -Wimplicit-procedure -Wimplicit-interface
      endif
    endif
    FCFLAGS += -Wno-unused-function
    FCFLAGS += -Werror
  endif
else ifeq ($(CMP),NAG)
  FC = mpinagfor
  FCFLAGS += -fpp
else ifeq ($(CMP),CRAY)
  FC = ftn
  FCFLAGS += -eF
  ifeq ($(DEBUG_BUILD),yes)
    DEFS += -DDEBUG
    FCFLAGS += -G2
    FCFLAGS += -en
  else
    FCFLAGS += -g -O3
  endif
  FCFLAGS += -N1023 -M 296
else ifeq ($(CMP),NVIDIA)
  FC = mpifort
  MODFLAG = -module # Explicit space
  FCFLAGS += -cpp
  ifeq ($(PARAMOD),multicore)
     FCFLAGS += -O3 -Minfo=accel -stdpar -acc -target=multicore
     LFLAGS += -acc -lnvhpcwrapnvtx
  else ifeq ($(PARAMOD),gpu)
     CCXY=80
     MANAGED=yes
     ifeq ($(MANAGED),yes)
       GPUOPT=-gpu=cc${CCXY},managed,lineinfo
     else
       GPUOPT=-gpu=cc${CCXY},lineinfo
     endif
     FCFLAGS += -D_GPU
     NCCL=no     
     ifeq ($(NCCL),yes)
       FCFLAGS += -D_NCCL
     endif
     FCFLAGS += -Mfree -Kieee -Minfo=accel,stdpar ${GPUOPT} -acc -target=gpu -traceback -O3 -DUSE_CUDA -cuda 
     ifeq ($(NCCL),yes)
       FCFLAGS += -cudalib=cufft,nccl
     else
       FCFLAGS += -cudalib=cufft
     endif
     LFLAGS += -acc -lnvhpcwrapnvtx
  else
    ifeq ($(DEBUG_BUILD),yes)
      DEFS += -DDEBUG
      FCFLAGS += -g -O0
      FCFLAGS += -traceback
      FCFLAGS += -Mbounds -Mchkptr
      FCFLAGS += -Ktrap=fp # Trap floating-point errors
    else
      FCFLAGS += -O3 -fast -tp=native
    endif
  endif
endif
ifeq ($(strip $(FTN_MPI_WRAPPER)),1)
  FC = ftn
endif

